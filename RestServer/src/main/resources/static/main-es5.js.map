{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/employee-form/employee-form.component.ts","webpack:///src/app/employee-form/employee-form.component.html","webpack:///src/app/employee-list/employee-list.component.ts","webpack:///src/app/employee-list/employee-list.component.html","webpack:///src/app/http-client/http-client-wrapper.ts","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/models/employee.model.ts","webpack:///src/app/models/login.model.ts","webpack:///src/app/service/employee.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","canActivate","redirectTo","pathMatch","AppRoutingModule","forRoot","useHash","imports","providers","AppComponent","router","authService","title","logOut","navigate","clearLocalStorage","selector","templateUrl","styleUrls","AppModule","declarations","bootstrap","AuthGuard","next","state","isAuthenticated","r","providedIn","AuthService","http","loginUrl","userName","password","login","username","callLogin","val","post","data","sessionStorage","setItem","token","role","removeItem","getItem","undefined","length","authRole","EmployeeFormComponent","route","employeeService","employee","warningMessage","hireTypes","value","viewValue","workingRoles","save","subscribe","result","goToEmployeeList","error","status","onSubmit","EmployeeListComponent","findAll","pipe","employees","HttpClientWrapper","headersItem","set","authToken","url","createAuthorizationHeader","get","headers","LoginComponent","loginService","loginModel","loginFailed","self","setToken","onAuthenticate","Employee","EmployeeModel","Login","EmployeeService","employeeUrl","environment","production","bootstrapModule","err","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {NgModule} from '@angular/core';\r\nimport {RouterModule, Routes} from '@angular/router';\r\nimport {EmployeeFormComponent} from './employee-form/employee-form.component';\r\nimport {EmployeeListComponent} from './employee-list/employee-list.component';\r\nimport {AuthGuard} from './auth/auth.guard';\r\nimport {LoginComponent} from './login/login.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'addemployee', component: EmployeeFormComponent, canActivate: [AuthGuard] },\r\n  { path: 'employees', component: EmployeeListComponent, canActivate: [AuthGuard] },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: '',   redirectTo: '/employees', pathMatch: 'full' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\r\n  exports: [RouterModule],\r\n  providers: [AuthGuard]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title: string;\r\n\r\n  constructor( private router: Router, private authService: AuthService) {\r\n    this.title = 'UiA Demo Prosjekt';\r\n  }\r\n\r\n  clearLocalStorage(): void {\r\n    this.authService.logOut();\r\n    this.router.navigate(['/login']);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n      <div class=\"card forest-background my-5\">\r\n        <div class=\"card-body\">\r\n          <h2 class=\"card-title text-center text-white py-3\">{{ title }}</h2>\r\n          <ul class=\"text-center list-inline py-3\">\r\n            <li class=\"list-inline-item\">\r\n              <a routerLink=\"/employees\" class=\"btn btn-info pear-background digital-black bold\">List Employees</a>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <a routerLink=\"/addemployee\" class=\"btn btn-info pear-background digital-black bold\">Add Employee</a>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <a routerLink=\"/login\" class=\"btn btn-info pear-background digital-black bold\">Login</a>\r\n            </li>\r\n            <li class=\"list-inline-item\">\r\n              <a (click)=\"clearLocalStorage()\" class=\"btn btn-info pear-background digital-black bold\">Logg ut</a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <router-outlet></router-outlet>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"padding-div\"></div>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\r\nimport { EmployeeFormComponent } from './employee-form/employee-form.component';\r\nimport { EmployeeService } from './service/employee.service';\r\nimport { AuthService } from './auth/auth.service';\r\nimport { LoginComponent } from './login/login.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    EmployeeListComponent,\r\n    EmployeeFormComponent,\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule\r\n  ],\r\n  providers: [ EmployeeService, AuthService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule {\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router} from '@angular/router';\r\nimport {Observable} from 'rxjs';\r\nimport {AuthService} from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ) {\r\n  }\r\n\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    if (this.authService.isAuthenticated) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['/login']).then(r => false);\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient} from '@angular/common/http';\r\nimport {Login} from '../models/login.model';\r\nimport {Observable} from 'rxjs';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthService {\r\n  loginUrl: string;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.loginUrl = 'http://localhost:8080/rest/login';\r\n  }\r\n\r\n  public login(userName: string, password: string): Observable<Login> {\r\n    const login = new Login();\r\n    login.username = userName;\r\n    login.password = password;\r\n    return this.callLogin(login);\r\n  }\r\n\r\n  public callLogin(val: Login): Observable<Login> {\r\n    return this.http.post<Login>(this.loginUrl, val);\r\n  }\r\n\r\n  get authToken(): string {\r\n    return sessionStorage.getItem('token');\r\n  }\r\n\r\n  get authRole(): string {\r\n    return sessionStorage.getItem('role');\r\n  }\r\n\r\n  get isAuthenticated(): boolean {\r\n    const token = sessionStorage.getItem('token');\r\n\r\n    if (token !== null && token !== undefined && token.length > 1) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  setToken(data: Login) {    \r\n    sessionStorage.setItem('token', data.token);\r\n    sessionStorage.setItem('role', data.role);\r\n  }\r\n\r\n  logOut() {\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.removeItem('role');\r\n  }\r\n\r\n  get isAuthenticatedAdmin(): boolean {\r\n    const token = sessionStorage.getItem('token');\r\n    const role = this.authRole;\r\n    if (token !== null && token !== undefined && token.length > 1 && role !== 'ADMIN') {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\nimport {EmployeeService} from '../service/employee.service';\r\nimport {Employee} from '../models/employee.model';\r\n\r\ninterface DropDownListType {\r\n  value: string;\r\n  viewValue: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-employee-form',\r\n  templateUrl: './employee-form.component.html',\r\n  styleUrls: ['./employee-form.component.css', '../app.component.css']\r\n})\r\n\r\nexport class EmployeeFormComponent implements OnInit {\r\n\r\n  employee: Employee;\r\n  hireTypes: DropDownListType[];\r\n  functionRoles: DropDownListType[];\r\n  workingRoles: DropDownListType[];\r\n  warningMessage: string;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private employeeService: EmployeeService) {\r\n    this.employee = new Employee();\r\n    this.warningMessage = null;\r\n    this.hireTypes = [\r\n      {value: 'HIRED', viewValue: 'Ansatt'},\r\n      {value: 'PROBATION', viewValue: 'Prøvetid'},\r\n      {value: 'INVALID', viewValue: 'Ukjent'}\r\n    ];\r\n    this.workingRoles = [\r\n      {value: 'PROJECT_LEADER', viewValue: 'Prosjektleder'},\r\n      {value: 'PROGRAMMER', viewValue: 'Programmerer'},\r\n      {value: 'EMPLOYEE', viewValue: 'Ansatt'}\r\n    ];\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onSubmit() {\r\n    this.employeeService.save(this.employee).subscribe(\r\n      result => this.goToEmployeeList(),\r\n      (error: any) => {\r\n        if (error.status === 401) {\r\n          this.warningMessage = \"Mangler rettigheter\";\r\n        }\r\n        if (error.status === 403) {\r\n          this.warningMessage = \"Ikke innlogget\";\r\n        } else {\r\n           this.warningMessage = \"Noe gikk feil\";\r\n         }\r\n      }\r\n      );\r\n  }\r\n\r\n  goToEmployeeList() {\r\n    this.router.navigate(['/employees']);\r\n  }\r\n}\r\n","<div class=\"card my-5\">\r\n  <div class=\"card-body\">\r\n    <h2 class=\"default-h2\">Legg til ansatt</h2>\r\n    <form (ngSubmit)=\"onSubmit()\" #employeeForm=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"employeeFirstName\">Fornavn</label>\r\n        <input type=\"text\" [(ngModel)]=\"employee.firstName\"\r\n               class=\"form-control\"\r\n               id=\"employeeFirstName\"\r\n               name=\"firstName\"\r\n               placeholder=\"Skriv inn fornavn\"\r\n               required #firstName=\"ngModel\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"employeelastName\">Etternavn</label>\r\n        <input type=\"text\" [(ngModel)]=\"employee.lastName\"\r\n               class=\"form-control\"\r\n               id=\"employeelastName\"\r\n               name=\"lastName\"\r\n               placeholder=\"Skriv inn etternavn\"\r\n               required #lastName=\"ngModel\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"birthday\">Fødeslsdato</label>\r\n        <input type=\"text\" [(ngModel)]=\"employee.birthday\"\r\n               class=\"form-control\"\r\n               id=\"birthday\"\r\n               name=\"birthday\"\r\n               placeholder=\"yyyy-mm-dd\"\r\n               required #birthday=\"ngModel\"\r\n               pattern=\"[0-9]{4}-[0-9]{2}-[0-9]{2}\">\r\n       <div [hidden]=\"birthday.valid\" class=\"alert\">Fødselsdato format yyyy-mm-dd</div>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"workingRole\">Ansettelsestype</label>\r\n        <select type=\"select\" [(ngModel)]=\"employee.hireType\"\r\n                class=\"form-control\"\r\n                name=\"workingRole\"\r\n                id=\"workingRole\"\r\n                required #workingRole=\"ngModel\">\r\n          <option *ngFor=\"let hireType of hireTypes\" [ngValue]=\"hireType.value\">\r\n            {{ hireType.viewValue }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n\r\n      <div class=\"form-group\">\r\n        <label for=\"functionRole\">Stilling/Funksjon</label>\r\n        <select type=\"select\" [(ngModel)]=\"employee.workingRole\"\r\n                class=\"form-control\"\r\n                name=\"functionRole\"\r\n                id=\"functionRole\"\r\n                required #functionRole=\"ngModel\">\r\n          <option *ngFor=\"let workingRole of workingRoles\" [ngValue]=\"workingRole.value\">\r\n            {{ workingRole.viewValue }}\r\n          </option>\r\n        </select>\r\n      </div>\r\n      <button type=\"submit\" [disabled]=\"!employeeForm.form.valid\"\r\n              class=\"btn btn-info pear-background digital-black bold margin-0-5 \">Submit\r\n      </button>\r\n    </form>\r\n    <span style=\"color:red\">{{ warningMessage }}</span>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { EmployeeService } from '../service/employee.service';\r\nimport { Router } from '@angular/router';\r\nimport { EmployeeModel } from '../models/employee.model';\r\n\r\n@Component({\r\n  selector: 'app-employee-list',\r\n  templateUrl: './employee-list.component.html',\r\n  styleUrls: ['./employee-list.component.css', '../app.component.css']\r\n})\r\nexport class EmployeeListComponent implements OnInit {\r\n\r\n  employees: EmployeeModel;\r\n  warningMessage: string;\r\n\r\n  constructor(private employeeService: EmployeeService,\r\n    private router: Router) {\r\n    this.warningMessage = null;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.employeeService.findAll().pipe().subscribe(\r\n      data => {\r\n        this.employees = data;\r\n      },\r\n      (error: any) => {\r\n        if (error.status === 401) {\r\n          this.warningMessage = \"Mangler rettigheter\";\r\n        } \r\n        else if (error.status === 403) {\r\n          this.warningMessage = \"Ikke innlogget\";\r\n        } else {\r\n          this.warningMessage = \"Noe gikk feil\";\r\n        }\r\n      });\r\n  }\r\n}\r\n","\r\n<div style=\"color:red\">{{ warningMessage }}</div>\r\n<div class=\"card my-5\">\r\n  <div *ngIf=\"employees\" class=\"card-body\">\r\n    <h2 class=\"default-h2\">Oversikt over ansatte og innleide</h2>    \r\n    <div class=\"overview-title\">\r\n      <span class=\"icon-span\">\r\n        <svg class=\"bi bi-person-circle\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path d=\"M13.468 12.37C12.758 11.226 11.195 10 8 10s-4.757 1.225-5.468 2.37A6.987 6.987 0 0 0 8 15a6.987 6.987 0 0 0 5.468-2.63z\"/>\r\n          <path fill-rule=\"evenodd\" d=\"M8 9a3 3 0 1 0 0-6 3 3 0 0 0 0 6z\"/>\r\n          <path fill-rule=\"evenodd\" d=\"M8 1a7 7 0 1 0 0 14A7 7 0 0 0 8 1zM0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"overview-text \">Totalt: {{employees.total}}</span>\r\n    </div>\r\n    <div class=\"overview-title\">\r\n      <span class=\"icon-span\">\r\n        <svg class=\"bi bi-check-circle\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"#02b039\"\r\n             xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fill-rule=\"evenodd\" d=\"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z\"/>\r\n          <path fill-rule=\"evenodd\"\r\n                d=\"M10.97 4.97a.75.75 0 0 1 1.071 1.05l-3.992 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425a.236.236 0 0 1 .02-.022z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"overview-text\">Ansatt: {{employees.valid}}</span>\r\n    </div>\r\n    <div class=\"overview-title\">\r\n      <span class=\"icon-span\">\r\n        <svg class=\"bi bi-exclamation-triangle-fill\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"#ffad14\"\r\n             xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fill-rule=\"evenodd\"\r\n                d=\"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5a.905.905 0 0 0-.9.995l.35 3.507a.552.552 0 0 0 1.1 0l.35-3.507A.905.905 0 0 0 8 5zm.002 6a1 1 0 1 0 0 2 1 1 0 0 0 0-2z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"overview-text \">Prøvetid: {{employees.warnings}}</span>\r\n    </div>\r\n    <div class=\"overview-title\">\r\n      <span class=\"icon-span\">\r\n        <svg class=\"bi bi-x-circle-fill\" width=\"1.2em\" height=\"1.2em\" viewBox=\"0 0 16 16\" fill=\"#f52042\"\r\n             xmlns=\"http://www.w3.org/2000/svg\">\r\n          <path fill-rule=\"evenodd\"\r\n                d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-4.146-3.146a.5.5 0 0 0-.708-.708L8 7.293 4.854 4.146a.5.5 0 1 0-.708.708L7.293 8l-3.147 3.146a.5.5 0 0 0 .708.708L8 8.707l3.146 3.147a.5.5 0 0 0 .708-.708L8.707 8l3.147-3.146z\"/>\r\n        </svg>\r\n      </span>\r\n      <span class=\"overview-text \">Ikke ansatt: {{employees.invalid}}</span>\r\n    </div>\r\n    <br/>\r\n    <table class=\"table table-bordered table-striped\">\r\n      <thead class=\"thead-forest\">\r\n      <tr>\r\n        <th scope=\"col\">Fornavn</th>\r\n        <th scope=\"col\">Etternavn</th>\r\n        <th scope=\"col\">Ansettelsesforhold</th>\r\n        <th scope=\"col\">Fødselsdato</th>\r\n        <th scope=\"col\">Rolle</th>\r\n      </tr>\r\n      </thead>\r\n      <tbody>\r\n      <tr *ngFor=\"let employee of employees.employees\"\r\n          [ngStyle]=\"employee.hireType === 'HIRED' ? {} : employee.hireType === 'PROBATION' ? { 'background-color': '#EEEE88' } : {'background-color': '#FAC0B1'}\">\r\n        <td>{{ employee.firstName }}</td>\r\n        <td>{{ employee.lastName }}</td>\r\n        <td>{{ employee.hireType }}</td>\r\n        <td>{{ employee.birthday }}</td>\r\n        <td>{{ employee.workingRole }}</td>\r\n      </tr>\r\n      </tbody>\r\n    </table>\r\n    <a routerLink=\"/addemployee\" class=\"btn btn-info pear-background digital-black bold margin-0-5 right\">Legg til ansatt</a>\r\n  </div>\r\n</div>\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport {Observable} from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpClientWrapper {\r\n\r\n  constructor(private http: HttpClient,\r\n              private authService: AuthService) {\r\n  }\r\n\r\n  createAuthorizationHeader(): HttpHeaders {\r\n    let headersItem = new HttpHeaders();\r\n    headersItem = headersItem.set('token', \"Bearer \" + this.authService.authToken);\r\n    return headersItem;\r\n  }\r\n\r\n  get<T>(url): Observable<T> {\r\n    const headersItem = this.createAuthorizationHeader();\r\n    return this.http.get<T>(url, {\r\n      headers: headersItem\r\n    });\r\n  }\r\n\r\n  post<T>(url, data): Observable<T> {\r\n    const headersItem = this.createAuthorizationHeader();\r\n    return this.http.post<T>(url, data, {\r\n      headers: headersItem\r\n    });\r\n  }\r\n}\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {AuthService} from '../auth/auth.service';\r\nimport {Login} from '../models/login.model';\r\nimport {Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css', '../app.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  loginModel: Login;\r\n  loginFailed: String;\r\n\r\n  constructor(private loginService: AuthService,\r\n              private router: Router) {\r\n    this.loginModel = new Login();\r\n    this.loginFailed = null;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  public onAuthenticate(): void {\r\n    var self = this;\r\n    this.loginService.callLogin(this.loginModel).subscribe(data => {\r\n      if (data.token) {\r\n        this.loginService.setToken(data);\r\n        this.router.navigate(['/employees']).then(r => false);\r\n      }\r\n    },\r\n    (error: any) => {\r\n      if(error.status === 401) {\r\n        self.loginFailed = \"Innlogging feilet\";\r\n      }\r\n    }\r\n  );\r\n  }\r\n\r\n}\r\n","<div class=\"card my-5\">\r\n  <div class=\"card-body\">\r\n    <h3 class=\"digital-black\">Innlogging</h3>\r\n    <form (ngSubmit)=\"onAuthenticate()\" #loginForm=\"ngForm\">\r\n      <div class=\"form-group\">\r\n        <label for=\"username\">Brukernavn</label>\r\n        <input type=\"text\" [(ngModel)]=\"loginModel.username\"\r\n               class=\"form-control\"\r\n               id=\"username\"\r\n               name=\"username\"\r\n               placeholder=\"Enter your user name\"\r\n               required #username=\"ngModel\">\r\n      </div>\r\n      <div class=\"form-group\">\r\n        <label for=\"password\">Passord</label>\r\n        <input type=\"password\" [(ngModel)]=\"loginModel.password\"\r\n               class=\"form-control\"\r\n               id=\"password\"\r\n               name=\"password\"\r\n               placeholder=\"Enter your password\"\r\n               required #password=\"ngModel\">\r\n      </div>\r\n      <button type=\"submit\" [disabled]=\"!loginForm.form.valid\"\r\n              class=\"btn btn-info pear-background digital-black bold margin-0-5\">Submit</button>\r\n              <span style=\"color:red\" *ngIf=\"loginFailed\">{{loginFailed}}</span>\r\n    </form>\r\n  </div>\r\n</div>\r\n","export class Employee {\r\n  firstName: string;\r\n  lastName: string;\r\n  company: string;\r\n  hireType: string;\r\n  birthday: string;\r\n  workingRole: string;\r\n}\r\n\r\nexport class EmployeeModel {\r\n  valid: number;\r\n  warnings: number;\r\n  invalid: number;\r\n  total: number;\r\n  employees: Employee[];\r\n}\r\n","export class Login {\r\n  username: string;\r\n  password: string;\r\n  token: string;\r\n  role: string;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {Employee, EmployeeModel} from '../models/employee.model';\r\nimport {HttpClientWrapper} from '../http-client/http-client-wrapper';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmployeeService {\r\n\r\n  private employeeUrl: string;\r\n\r\n  constructor(private http: HttpClientWrapper) {\r\n    this.employeeUrl = 'http://localhost:8080/rest/employees';\r\n  }\r\n\r\n  public findAll(): Observable<EmployeeModel> {\r\n    return this.http.get<EmployeeModel>(this.employeeUrl);\r\n  }\r\n\r\n  public save(employee: Employee) {\r\n    return this.http.post<Employee>(this.employeeUrl, employee);\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}